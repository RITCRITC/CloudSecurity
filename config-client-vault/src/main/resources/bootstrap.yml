spring:
  application:
    name: config-client-vault
  cloud:
    config:
      uri: http://localhost:8888
      token: ${spring.cloud.vault.token}
    vault:
      kv:
        enabled: true
        application-name: ${spring.application.name}
      # enable dynamic database credentials
      database:
        enabled: true
        role: config-client-vault-write
      host: localhost
      port: 8200
      scheme: http

      # Token authentication
      authentication: TOKEN
      # AppRole authentication
#      authentication: APPROLE

      # root token
      # token: s.e20u7J6IlPhyocHpCoazdUXl

      # config-client-vault token
      token: s.bLR1OBPsEkINPU8gTjnr9F8g

      # config-client-vault app-role
      app-role:
        role-id: 0cf18dc2-fa49-57b6-277f-7ab2940e1aa5
        secret-id: 7b06c770-6fed-ae46-c878-7dd55db9c725
  datasource:
    url: jdbc:postgresql://localhost:5432/config-client-vault
    # credentials are obtained via Vault
    initialization-mode: always
  jpa:
    open-in-view: true
    hibernate:
      ddl-auto: create-drop

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    root: info